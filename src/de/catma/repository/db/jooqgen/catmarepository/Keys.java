/**
 * This class is generated by jOOQ
 */
package de.catma.repository.db.jooqgen.catmarepository;


import de.catma.repository.db.jooqgen.catmarepository.tables.Corpus;
import de.catma.repository.db.jooqgen.catmarepository.tables.CorpusSourcedocument;
import de.catma.repository.db.jooqgen.catmarepository.tables.CorpusStaticmarkupcollection;
import de.catma.repository.db.jooqgen.catmarepository.tables.CorpusUsermarkupcollection;
import de.catma.repository.db.jooqgen.catmarepository.tables.MaintenanceSem;
import de.catma.repository.db.jooqgen.catmarepository.tables.Permission;
import de.catma.repository.db.jooqgen.catmarepository.tables.Property;
import de.catma.repository.db.jooqgen.catmarepository.tables.PropertydefPossiblevalue;
import de.catma.repository.db.jooqgen.catmarepository.tables.Propertydefinition;
import de.catma.repository.db.jooqgen.catmarepository.tables.Propertyvalue;
import de.catma.repository.db.jooqgen.catmarepository.tables.Role;
import de.catma.repository.db.jooqgen.catmarepository.tables.RolePermission;
import de.catma.repository.db.jooqgen.catmarepository.tables.Sourcedocument;
import de.catma.repository.db.jooqgen.catmarepository.tables.Staticmarkupattribute;
import de.catma.repository.db.jooqgen.catmarepository.tables.Staticmarkupcollection;
import de.catma.repository.db.jooqgen.catmarepository.tables.Staticmarkupinstance;
import de.catma.repository.db.jooqgen.catmarepository.tables.Tagdefinition;
import de.catma.repository.db.jooqgen.catmarepository.tables.Taginstance;
import de.catma.repository.db.jooqgen.catmarepository.tables.Taglibrary;
import de.catma.repository.db.jooqgen.catmarepository.tables.Tagreference;
import de.catma.repository.db.jooqgen.catmarepository.tables.Tagsetdefinition;
import de.catma.repository.db.jooqgen.catmarepository.tables.UnseparableCharsequence;
import de.catma.repository.db.jooqgen.catmarepository.tables.User;
import de.catma.repository.db.jooqgen.catmarepository.tables.UserCorpus;
import de.catma.repository.db.jooqgen.catmarepository.tables.UserRole;
import de.catma.repository.db.jooqgen.catmarepository.tables.UserSourcedocument;
import de.catma.repository.db.jooqgen.catmarepository.tables.UserStaticmarkupcollection;
import de.catma.repository.db.jooqgen.catmarepository.tables.UserTaglibrary;
import de.catma.repository.db.jooqgen.catmarepository.tables.UserUsermarkupcollection;
import de.catma.repository.db.jooqgen.catmarepository.tables.UserdefinedSeparatingcharacter;
import de.catma.repository.db.jooqgen.catmarepository.tables.Usermarkupcollection;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>catmarepository</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<Record, Integer> IDENTITY_CORPUS = Identities0.IDENTITY_CORPUS;
	public static final Identity<Record, Integer> IDENTITY_CORPUS_SOURCEDOCUMENT = Identities0.IDENTITY_CORPUS_SOURCEDOCUMENT;
	public static final Identity<Record, Integer> IDENTITY_CORPUS_STATICMARKUPCOLLECTION = Identities0.IDENTITY_CORPUS_STATICMARKUPCOLLECTION;
	public static final Identity<Record, Integer> IDENTITY_CORPUS_USERMARKUPCOLLECTION = Identities0.IDENTITY_CORPUS_USERMARKUPCOLLECTION;
	public static final Identity<Record, Integer> IDENTITY_MAINTENANCE_SEM = Identities0.IDENTITY_MAINTENANCE_SEM;
	public static final Identity<Record, Integer> IDENTITY_PERMISSION = Identities0.IDENTITY_PERMISSION;
	public static final Identity<Record, Integer> IDENTITY_PROPERTY = Identities0.IDENTITY_PROPERTY;
	public static final Identity<Record, Integer> IDENTITY_PROPERTYDEFINITION = Identities0.IDENTITY_PROPERTYDEFINITION;
	public static final Identity<Record, Integer> IDENTITY_PROPERTYDEF_POSSIBLEVALUE = Identities0.IDENTITY_PROPERTYDEF_POSSIBLEVALUE;
	public static final Identity<Record, Integer> IDENTITY_PROPERTYVALUE = Identities0.IDENTITY_PROPERTYVALUE;
	public static final Identity<Record, Integer> IDENTITY_ROLE = Identities0.IDENTITY_ROLE;
	public static final Identity<Record, Integer> IDENTITY_ROLE_PERMISSION = Identities0.IDENTITY_ROLE_PERMISSION;
	public static final Identity<Record, Integer> IDENTITY_SOURCEDOCUMENT = Identities0.IDENTITY_SOURCEDOCUMENT;
	public static final Identity<Record, Integer> IDENTITY_STATICMARKUPATTRIBUTE = Identities0.IDENTITY_STATICMARKUPATTRIBUTE;
	public static final Identity<Record, Integer> IDENTITY_STATICMARKUPCOLLECTION = Identities0.IDENTITY_STATICMARKUPCOLLECTION;
	public static final Identity<Record, Integer> IDENTITY_STATICMARKUPINSTANCE = Identities0.IDENTITY_STATICMARKUPINSTANCE;
	public static final Identity<Record, Integer> IDENTITY_TAGDEFINITION = Identities0.IDENTITY_TAGDEFINITION;
	public static final Identity<Record, Integer> IDENTITY_TAGINSTANCE = Identities0.IDENTITY_TAGINSTANCE;
	public static final Identity<Record, Integer> IDENTITY_TAGLIBRARY = Identities0.IDENTITY_TAGLIBRARY;
	public static final Identity<Record, Integer> IDENTITY_TAGREFERENCE = Identities0.IDENTITY_TAGREFERENCE;
	public static final Identity<Record, Integer> IDENTITY_TAGSETDEFINITION = Identities0.IDENTITY_TAGSETDEFINITION;
	public static final Identity<Record, Integer> IDENTITY_UNSEPARABLE_CHARSEQUENCE = Identities0.IDENTITY_UNSEPARABLE_CHARSEQUENCE;
	public static final Identity<Record, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;
	public static final Identity<Record, Integer> IDENTITY_USERDEFINED_SEPARATINGCHARACTER = Identities0.IDENTITY_USERDEFINED_SEPARATINGCHARACTER;
	public static final Identity<Record, Integer> IDENTITY_USERMARKUPCOLLECTION = Identities0.IDENTITY_USERMARKUPCOLLECTION;
	public static final Identity<Record, Integer> IDENTITY_USER_CORPUS = Identities0.IDENTITY_USER_CORPUS;
	public static final Identity<Record, Integer> IDENTITY_USER_ROLE = Identities0.IDENTITY_USER_ROLE;
	public static final Identity<Record, Integer> IDENTITY_USER_SOURCEDOCUMENT = Identities0.IDENTITY_USER_SOURCEDOCUMENT;
	public static final Identity<Record, Integer> IDENTITY_USER_STATICMARKUPCOLLECTION = Identities0.IDENTITY_USER_STATICMARKUPCOLLECTION;
	public static final Identity<Record, Integer> IDENTITY_USER_TAGLIBRARY = Identities0.IDENTITY_USER_TAGLIBRARY;
	public static final Identity<Record, Integer> IDENTITY_USER_USERMARKUPCOLLECTION = Identities0.IDENTITY_USER_USERMARKUPCOLLECTION;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<Record> KEY_CORPUS_PRIMARY = UniqueKeys0.KEY_CORPUS_PRIMARY;
	public static final UniqueKey<Record> KEY_CORPUS_SOURCEDOCUMENT_PRIMARY = UniqueKeys0.KEY_CORPUS_SOURCEDOCUMENT_PRIMARY;
	public static final UniqueKey<Record> KEY_CORPUS_SOURCEDOCUMENT_UK_CORPUSSD_CORPUSID_SDID = UniqueKeys0.KEY_CORPUS_SOURCEDOCUMENT_UK_CORPUSSD_CORPUSID_SDID;
	public static final UniqueKey<Record> KEY_CORPUS_STATICMARKUPCOLLECTION_PRIMARY = UniqueKeys0.KEY_CORPUS_STATICMARKUPCOLLECTION_PRIMARY;
	public static final UniqueKey<Record> KEY_CORPUS_STATICMARKUPCOLLECTION_UK_CORPUSSMC_CORPUSID_SMCID = UniqueKeys0.KEY_CORPUS_STATICMARKUPCOLLECTION_UK_CORPUSSMC_CORPUSID_SMCID;
	public static final UniqueKey<Record> KEY_CORPUS_USERMARKUPCOLLECTION_PRIMARY = UniqueKeys0.KEY_CORPUS_USERMARKUPCOLLECTION_PRIMARY;
	public static final UniqueKey<Record> KEY_CORPUS_USERMARKUPCOLLECTION_UK_CORPUSUMC_CORPUSID_UMCID = UniqueKeys0.KEY_CORPUS_USERMARKUPCOLLECTION_UK_CORPUSUMC_CORPUSID_UMCID;
	public static final UniqueKey<Record> KEY_MAINTENANCE_SEM_PRIMARY = UniqueKeys0.KEY_MAINTENANCE_SEM_PRIMARY;
	public static final UniqueKey<Record> KEY_PERMISSION_PRIMARY = UniqueKeys0.KEY_PERMISSION_PRIMARY;
	public static final UniqueKey<Record> KEY_PERMISSION_UK_PERM_IDENTIFIER = UniqueKeys0.KEY_PERMISSION_UK_PERM_IDENTIFIER;
	public static final UniqueKey<Record> KEY_PROPERTY_PRIMARY = UniqueKeys0.KEY_PROPERTY_PRIMARY;
	public static final UniqueKey<Record> KEY_PROPERTYDEFINITION_PRIMARY = UniqueKeys0.KEY_PROPERTYDEFINITION_PRIMARY;
	public static final UniqueKey<Record> KEY_PROPERTYDEFINITION_UK_PD_UUID_TDEF = UniqueKeys0.KEY_PROPERTYDEFINITION_UK_PD_UUID_TDEF;
	public static final UniqueKey<Record> KEY_PROPERTYDEF_POSSIBLEVALUE_PRIMARY = UniqueKeys0.KEY_PROPERTYDEF_POSSIBLEVALUE_PRIMARY;
	public static final UniqueKey<Record> KEY_PROPERTYVALUE_PRIMARY = UniqueKeys0.KEY_PROPERTYVALUE_PRIMARY;
	public static final UniqueKey<Record> KEY_ROLE_PRIMARY = UniqueKeys0.KEY_ROLE_PRIMARY;
	public static final UniqueKey<Record> KEY_ROLE_UK_ROLE_IDENTIFIER = UniqueKeys0.KEY_ROLE_UK_ROLE_IDENTIFIER;
	public static final UniqueKey<Record> KEY_ROLE_PERMISSION_PRIMARY = UniqueKeys0.KEY_ROLE_PERMISSION_PRIMARY;
	public static final UniqueKey<Record> KEY_SOURCEDOCUMENT_PRIMARY = UniqueKeys0.KEY_SOURCEDOCUMENT_PRIMARY;
	public static final UniqueKey<Record> KEY_STATICMARKUPATTRIBUTE_PRIMARY = UniqueKeys0.KEY_STATICMARKUPATTRIBUTE_PRIMARY;
	public static final UniqueKey<Record> KEY_STATICMARKUPCOLLECTION_PRIMARY = UniqueKeys0.KEY_STATICMARKUPCOLLECTION_PRIMARY;
	public static final UniqueKey<Record> KEY_STATICMARKUPINSTANCE_PRIMARY = UniqueKeys0.KEY_STATICMARKUPINSTANCE_PRIMARY;
	public static final UniqueKey<Record> KEY_TAGDEFINITION_PRIMARY = UniqueKeys0.KEY_TAGDEFINITION_PRIMARY;
	public static final UniqueKey<Record> KEY_TAGDEFINITION_UK_TDEF_TSDEF_UUID = UniqueKeys0.KEY_TAGDEFINITION_UK_TDEF_TSDEF_UUID;
	public static final UniqueKey<Record> KEY_TAGINSTANCE_PRIMARY = UniqueKeys0.KEY_TAGINSTANCE_PRIMARY;
	public static final UniqueKey<Record> KEY_TAGINSTANCE_UK_TI_UUID = UniqueKeys0.KEY_TAGINSTANCE_UK_TI_UUID;
	public static final UniqueKey<Record> KEY_TAGLIBRARY_PRIMARY = UniqueKeys0.KEY_TAGLIBRARY_PRIMARY;
	public static final UniqueKey<Record> KEY_TAGREFERENCE_PRIMARY = UniqueKeys0.KEY_TAGREFERENCE_PRIMARY;
	public static final UniqueKey<Record> KEY_TAGSETDEFINITION_PRIMARY = UniqueKeys0.KEY_TAGSETDEFINITION_PRIMARY;
	public static final UniqueKey<Record> KEY_TAGSETDEFINITION_UK_TSDEF_TLIB_UUID = UniqueKeys0.KEY_TAGSETDEFINITION_UK_TSDEF_TLIB_UUID;
	public static final UniqueKey<Record> KEY_UNSEPARABLE_CHARSEQUENCE_PRIMARY = UniqueKeys0.KEY_UNSEPARABLE_CHARSEQUENCE_PRIMARY;
	public static final UniqueKey<Record> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
	public static final UniqueKey<Record> KEY_USERDEFINED_SEPARATINGCHARACTER_PRIMARY = UniqueKeys0.KEY_USERDEFINED_SEPARATINGCHARACTER_PRIMARY;
	public static final UniqueKey<Record> KEY_USERMARKUPCOLLECTION_PRIMARY = UniqueKeys0.KEY_USERMARKUPCOLLECTION_PRIMARY;
	public static final UniqueKey<Record> KEY_USER_CORPUS_PRIMARY = UniqueKeys0.KEY_USER_CORPUS_PRIMARY;
	public static final UniqueKey<Record> KEY_USER_ROLE_PRIMARY = UniqueKeys0.KEY_USER_ROLE_PRIMARY;
	public static final UniqueKey<Record> KEY_USER_SOURCEDOCUMENT_PRIMARY = UniqueKeys0.KEY_USER_SOURCEDOCUMENT_PRIMARY;
	public static final UniqueKey<Record> KEY_USER_STATICMARKUPCOLLECTION_PRIMARY = UniqueKeys0.KEY_USER_STATICMARKUPCOLLECTION_PRIMARY;
	public static final UniqueKey<Record> KEY_USER_TAGLIBRARY_PRIMARY = UniqueKeys0.KEY_USER_TAGLIBRARY_PRIMARY;
	public static final UniqueKey<Record> KEY_USER_USERMARKUPCOLLECTION_PRIMARY = UniqueKeys0.KEY_USER_USERMARKUPCOLLECTION_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<Record, Record> FK_CORPUSSD_CORPUSID = ForeignKeys0.FK_CORPUSSD_CORPUSID;
	public static final ForeignKey<Record, Record> FK_CORPUSSD_SOURCEDOCUMENTID = ForeignKeys0.FK_CORPUSSD_SOURCEDOCUMENTID;
	public static final ForeignKey<Record, Record> FK_CORPUSSMC_CORPUSID = ForeignKeys0.FK_CORPUSSMC_CORPUSID;
	public static final ForeignKey<Record, Record> FK_CORPUSSMC_STATICMARKUPCOLLECTIONID = ForeignKeys0.FK_CORPUSSMC_STATICMARKUPCOLLECTIONID;
	public static final ForeignKey<Record, Record> FK_CORPUSUMC_CORPUSID = ForeignKeys0.FK_CORPUSUMC_CORPUSID;
	public static final ForeignKey<Record, Record> FK_CORPUSUMC_USERMARKUPCOLLECTIONID = ForeignKeys0.FK_CORPUSUMC_USERMARKUPCOLLECTIONID;
	public static final ForeignKey<Record, Record> FK_PROP_PROPERTYDEFINITIONID = ForeignKeys0.FK_PROP_PROPERTYDEFINITIONID;
	public static final ForeignKey<Record, Record> FK_PROP_TAGINSTANCEID = ForeignKeys0.FK_PROP_TAGINSTANCEID;
	public static final ForeignKey<Record, Record> FK_PD_TAGDEFINITIONID = ForeignKeys0.FK_PD_TAGDEFINITIONID;
	public static final ForeignKey<Record, Record> FK_PPV_PROPERTYDEFINITIONID = ForeignKeys0.FK_PPV_PROPERTYDEFINITIONID;
	public static final ForeignKey<Record, Record> FK_PROPV_PROPERTYID = ForeignKeys0.FK_PROPV_PROPERTYID;
	public static final ForeignKey<Record, Record> FK_ROLE_PERM_ROLEID = ForeignKeys0.FK_ROLE_PERM_ROLEID;
	public static final ForeignKey<Record, Record> FK_ROLE_PERM_PERMISSIONID = ForeignKeys0.FK_ROLE_PERM_PERMISSIONID;
	public static final ForeignKey<Record, Record> FK_STATICA_STATICMARKUPINSTANCEID = ForeignKeys0.FK_STATICA_STATICMARKUPINSTANCEID;
	public static final ForeignKey<Record, Record> FK_STATICMC_SOURCEDOCUMENTID00 = ForeignKeys0.FK_STATICMC_SOURCEDOCUMENTID00;
	public static final ForeignKey<Record, Record> FK_STATICMI_STATICMARKUPCOLLECTIONID = ForeignKeys0.FK_STATICMI_STATICMARKUPCOLLECTIONID;
	public static final ForeignKey<Record, Record> FK_TDEF_TAGSETDEFINITIONID = ForeignKeys0.FK_TDEF_TAGSETDEFINITIONID;
	public static final ForeignKey<Record, Record> FK_TDEF_PARENTID = ForeignKeys0.FK_TDEF_PARENTID;
	public static final ForeignKey<Record, Record> FK_TI_TAGDEFINITIONID = ForeignKeys0.FK_TI_TAGDEFINITIONID;
	public static final ForeignKey<Record, Record> FK_TR_USERMARKUPCOLLECTIONID = ForeignKeys0.FK_TR_USERMARKUPCOLLECTIONID;
	public static final ForeignKey<Record, Record> FK_TR_TAGINSTANCEID = ForeignKeys0.FK_TR_TAGINSTANCEID;
	public static final ForeignKey<Record, Record> FK_TSDEF_TAGLIBRARYID = ForeignKeys0.FK_TSDEF_TAGLIBRARYID;
	public static final ForeignKey<Record, Record> FK_USCS_SOURCEDOCUMENTID = ForeignKeys0.FK_USCS_SOURCEDOCUMENTID;
	public static final ForeignKey<Record, Record> FK_UDSC_SOURCEDOCUMENTID = ForeignKeys0.FK_UDSC_SOURCEDOCUMENTID;
	public static final ForeignKey<Record, Record> FK_UMC_SOURCEDOCUMENTID = ForeignKeys0.FK_UMC_SOURCEDOCUMENTID;
	public static final ForeignKey<Record, Record> FK_UMC_TAGLIBRARYID = ForeignKeys0.FK_UMC_TAGLIBRARYID;
	public static final ForeignKey<Record, Record> FK_USERCORPUS_USERID = ForeignKeys0.FK_USERCORPUS_USERID;
	public static final ForeignKey<Record, Record> FK_USERCORPUS_CORPUSID = ForeignKeys0.FK_USERCORPUS_CORPUSID;
	public static final ForeignKey<Record, Record> FK_USER_ROLE_USERID = ForeignKeys0.FK_USER_ROLE_USERID;
	public static final ForeignKey<Record, Record> FK_USER_ROLE_ROLEID = ForeignKeys0.FK_USER_ROLE_ROLEID;
	public static final ForeignKey<Record, Record> FK_USERSD_USERID = ForeignKeys0.FK_USERSD_USERID;
	public static final ForeignKey<Record, Record> FK_USERSD_SOURCEDOCUMENTID = ForeignKeys0.FK_USERSD_SOURCEDOCUMENTID;
	public static final ForeignKey<Record, Record> FK_USERSMC_USERID = ForeignKeys0.FK_USERSMC_USERID;
	public static final ForeignKey<Record, Record> FK_USERSMC_STATICMARKUPCOLLECTIONID = ForeignKeys0.FK_USERSMC_STATICMARKUPCOLLECTIONID;
	public static final ForeignKey<Record, Record> FK_USERTL_USERID = ForeignKeys0.FK_USERTL_USERID;
	public static final ForeignKey<Record, Record> FK_USERTL_TAGLIBRARYID = ForeignKeys0.FK_USERTL_TAGLIBRARYID;
	public static final ForeignKey<Record, Record> FK_USERUMC_USERID = ForeignKeys0.FK_USERUMC_USERID;
	public static final ForeignKey<Record, Record> FK_USERUMC_USERMARKUPCOLLECTIONID = ForeignKeys0.FK_USERUMC_USERMARKUPCOLLECTIONID;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<Record, Integer> IDENTITY_CORPUS = createIdentity(Corpus.CORPUS, Corpus.CORPUS.CORPUSID);
		public static Identity<Record, Integer> IDENTITY_CORPUS_SOURCEDOCUMENT = createIdentity(CorpusSourcedocument.CORPUS_SOURCEDOCUMENT, CorpusSourcedocument.CORPUS_SOURCEDOCUMENT.CORPUS_SOURCEDOCUMENTID);
		public static Identity<Record, Integer> IDENTITY_CORPUS_STATICMARKUPCOLLECTION = createIdentity(CorpusStaticmarkupcollection.CORPUS_STATICMARKUPCOLLECTION, CorpusStaticmarkupcollection.CORPUS_STATICMARKUPCOLLECTION.CORPUS_STATICMARKUPCOLLECTIONID);
		public static Identity<Record, Integer> IDENTITY_CORPUS_USERMARKUPCOLLECTION = createIdentity(CorpusUsermarkupcollection.CORPUS_USERMARKUPCOLLECTION, CorpusUsermarkupcollection.CORPUS_USERMARKUPCOLLECTION.CORPUS_USERMARKUPCOLLECTIONID);
		public static Identity<Record, Integer> IDENTITY_MAINTENANCE_SEM = createIdentity(MaintenanceSem.MAINTENANCE_SEM, MaintenanceSem.MAINTENANCE_SEM.MAINTENANCE_SEMID);
		public static Identity<Record, Integer> IDENTITY_PERMISSION = createIdentity(Permission.PERMISSION, Permission.PERMISSION.PERMISSIONID);
		public static Identity<Record, Integer> IDENTITY_PROPERTY = createIdentity(Property.PROPERTY, Property.PROPERTY.PROPERTYID);
		public static Identity<Record, Integer> IDENTITY_PROPERTYDEFINITION = createIdentity(Propertydefinition.PROPERTYDEFINITION, Propertydefinition.PROPERTYDEFINITION.PROPERTYDEFINITIONID);
		public static Identity<Record, Integer> IDENTITY_PROPERTYDEF_POSSIBLEVALUE = createIdentity(PropertydefPossiblevalue.PROPERTYDEF_POSSIBLEVALUE, PropertydefPossiblevalue.PROPERTYDEF_POSSIBLEVALUE.PROPERTYDEFPOSSIBLEVALUEID);
		public static Identity<Record, Integer> IDENTITY_PROPERTYVALUE = createIdentity(Propertyvalue.PROPERTYVALUE, Propertyvalue.PROPERTYVALUE.PROPERTYVALUEID);
		public static Identity<Record, Integer> IDENTITY_ROLE = createIdentity(Role.ROLE, Role.ROLE.ROLEID);
		public static Identity<Record, Integer> IDENTITY_ROLE_PERMISSION = createIdentity(RolePermission.ROLE_PERMISSION, RolePermission.ROLE_PERMISSION.ROLE_PERMISSIONID);
		public static Identity<Record, Integer> IDENTITY_SOURCEDOCUMENT = createIdentity(Sourcedocument.SOURCEDOCUMENT, Sourcedocument.SOURCEDOCUMENT.SOURCEDOCUMENTID);
		public static Identity<Record, Integer> IDENTITY_STATICMARKUPATTRIBUTE = createIdentity(Staticmarkupattribute.STATICMARKUPATTRIBUTE, Staticmarkupattribute.STATICMARKUPATTRIBUTE.STATICMARKUPATTRIBUTEID);
		public static Identity<Record, Integer> IDENTITY_STATICMARKUPCOLLECTION = createIdentity(Staticmarkupcollection.STATICMARKUPCOLLECTION, Staticmarkupcollection.STATICMARKUPCOLLECTION.STATICMARKUPCOLLECTIONID);
		public static Identity<Record, Integer> IDENTITY_STATICMARKUPINSTANCE = createIdentity(Staticmarkupinstance.STATICMARKUPINSTANCE, Staticmarkupinstance.STATICMARKUPINSTANCE.STATICMARKUPINSTANCEID);
		public static Identity<Record, Integer> IDENTITY_TAGDEFINITION = createIdentity(Tagdefinition.TAGDEFINITION, Tagdefinition.TAGDEFINITION.TAGDEFINITIONID);
		public static Identity<Record, Integer> IDENTITY_TAGINSTANCE = createIdentity(Taginstance.TAGINSTANCE, Taginstance.TAGINSTANCE.TAGINSTANCEID);
		public static Identity<Record, Integer> IDENTITY_TAGLIBRARY = createIdentity(Taglibrary.TAGLIBRARY, Taglibrary.TAGLIBRARY.TAGLIBRARYID);
		public static Identity<Record, Integer> IDENTITY_TAGREFERENCE = createIdentity(Tagreference.TAGREFERENCE, Tagreference.TAGREFERENCE.TAGREFERENCEID);
		public static Identity<Record, Integer> IDENTITY_TAGSETDEFINITION = createIdentity(Tagsetdefinition.TAGSETDEFINITION, Tagsetdefinition.TAGSETDEFINITION.TAGSETDEFINITIONID);
		public static Identity<Record, Integer> IDENTITY_UNSEPARABLE_CHARSEQUENCE = createIdentity(UnseparableCharsequence.UNSEPARABLE_CHARSEQUENCE, UnseparableCharsequence.UNSEPARABLE_CHARSEQUENCE.USCID);
		public static Identity<Record, Integer> IDENTITY_USER = createIdentity(User.USER, User.USER.USERID);
		public static Identity<Record, Integer> IDENTITY_USERDEFINED_SEPARATINGCHARACTER = createIdentity(UserdefinedSeparatingcharacter.USERDEFINED_SEPARATINGCHARACTER, UserdefinedSeparatingcharacter.USERDEFINED_SEPARATINGCHARACTER.UDSCID);
		public static Identity<Record, Integer> IDENTITY_USERMARKUPCOLLECTION = createIdentity(Usermarkupcollection.USERMARKUPCOLLECTION, Usermarkupcollection.USERMARKUPCOLLECTION.USERMARKUPCOLLECTIONID);
		public static Identity<Record, Integer> IDENTITY_USER_CORPUS = createIdentity(UserCorpus.USER_CORPUS, UserCorpus.USER_CORPUS.USER_CORPUSID);
		public static Identity<Record, Integer> IDENTITY_USER_ROLE = createIdentity(UserRole.USER_ROLE, UserRole.USER_ROLE.USER_ROLEID);
		public static Identity<Record, Integer> IDENTITY_USER_SOURCEDOCUMENT = createIdentity(UserSourcedocument.USER_SOURCEDOCUMENT, UserSourcedocument.USER_SOURCEDOCUMENT.USER_SOURCEDOCUMENTID);
		public static Identity<Record, Integer> IDENTITY_USER_STATICMARKUPCOLLECTION = createIdentity(UserStaticmarkupcollection.USER_STATICMARKUPCOLLECTION, UserStaticmarkupcollection.USER_STATICMARKUPCOLLECTION.USER_STATICMARKUPCOLLECTIONID);
		public static Identity<Record, Integer> IDENTITY_USER_TAGLIBRARY = createIdentity(UserTaglibrary.USER_TAGLIBRARY, UserTaglibrary.USER_TAGLIBRARY.USER_TAGLIBRARYID);
		public static Identity<Record, Integer> IDENTITY_USER_USERMARKUPCOLLECTION = createIdentity(UserUsermarkupcollection.USER_USERMARKUPCOLLECTION, UserUsermarkupcollection.USER_USERMARKUPCOLLECTION.USER_USERMARKUPCOLLECTIOID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<Record> KEY_CORPUS_PRIMARY = createUniqueKey(Corpus.CORPUS, Corpus.CORPUS.CORPUSID);
		public static final UniqueKey<Record> KEY_CORPUS_SOURCEDOCUMENT_PRIMARY = createUniqueKey(CorpusSourcedocument.CORPUS_SOURCEDOCUMENT, CorpusSourcedocument.CORPUS_SOURCEDOCUMENT.CORPUS_SOURCEDOCUMENTID);
		public static final UniqueKey<Record> KEY_CORPUS_SOURCEDOCUMENT_UK_CORPUSSD_CORPUSID_SDID = createUniqueKey(CorpusSourcedocument.CORPUS_SOURCEDOCUMENT, CorpusSourcedocument.CORPUS_SOURCEDOCUMENT.CORPUSID, CorpusSourcedocument.CORPUS_SOURCEDOCUMENT.SOURCEDOCUMENTID);
		public static final UniqueKey<Record> KEY_CORPUS_STATICMARKUPCOLLECTION_PRIMARY = createUniqueKey(CorpusStaticmarkupcollection.CORPUS_STATICMARKUPCOLLECTION, CorpusStaticmarkupcollection.CORPUS_STATICMARKUPCOLLECTION.CORPUS_STATICMARKUPCOLLECTIONID);
		public static final UniqueKey<Record> KEY_CORPUS_STATICMARKUPCOLLECTION_UK_CORPUSSMC_CORPUSID_SMCID = createUniqueKey(CorpusStaticmarkupcollection.CORPUS_STATICMARKUPCOLLECTION, CorpusStaticmarkupcollection.CORPUS_STATICMARKUPCOLLECTION.CORPUSID, CorpusStaticmarkupcollection.CORPUS_STATICMARKUPCOLLECTION.STATICMARKUPCOLLECTIONID);
		public static final UniqueKey<Record> KEY_CORPUS_USERMARKUPCOLLECTION_PRIMARY = createUniqueKey(CorpusUsermarkupcollection.CORPUS_USERMARKUPCOLLECTION, CorpusUsermarkupcollection.CORPUS_USERMARKUPCOLLECTION.CORPUS_USERMARKUPCOLLECTIONID);
		public static final UniqueKey<Record> KEY_CORPUS_USERMARKUPCOLLECTION_UK_CORPUSUMC_CORPUSID_UMCID = createUniqueKey(CorpusUsermarkupcollection.CORPUS_USERMARKUPCOLLECTION, CorpusUsermarkupcollection.CORPUS_USERMARKUPCOLLECTION.CORPUSID, CorpusUsermarkupcollection.CORPUS_USERMARKUPCOLLECTION.USERMARKUPCOLLECTIONID);
		public static final UniqueKey<Record> KEY_MAINTENANCE_SEM_PRIMARY = createUniqueKey(MaintenanceSem.MAINTENANCE_SEM, MaintenanceSem.MAINTENANCE_SEM.MAINTENANCE_SEMID);
		public static final UniqueKey<Record> KEY_PERMISSION_PRIMARY = createUniqueKey(Permission.PERMISSION, Permission.PERMISSION.PERMISSIONID);
		public static final UniqueKey<Record> KEY_PERMISSION_UK_PERM_IDENTIFIER = createUniqueKey(Permission.PERMISSION, Permission.PERMISSION.IDENTIFIER);
		public static final UniqueKey<Record> KEY_PROPERTY_PRIMARY = createUniqueKey(Property.PROPERTY, Property.PROPERTY.PROPERTYID);
		public static final UniqueKey<Record> KEY_PROPERTYDEFINITION_PRIMARY = createUniqueKey(Propertydefinition.PROPERTYDEFINITION, Propertydefinition.PROPERTYDEFINITION.PROPERTYDEFINITIONID);
		public static final UniqueKey<Record> KEY_PROPERTYDEFINITION_UK_PD_UUID_TDEF = createUniqueKey(Propertydefinition.PROPERTYDEFINITION, Propertydefinition.PROPERTYDEFINITION.UUID, Propertydefinition.PROPERTYDEFINITION.TAGDEFINITIONID);
		public static final UniqueKey<Record> KEY_PROPERTYDEF_POSSIBLEVALUE_PRIMARY = createUniqueKey(PropertydefPossiblevalue.PROPERTYDEF_POSSIBLEVALUE, PropertydefPossiblevalue.PROPERTYDEF_POSSIBLEVALUE.PROPERTYDEFPOSSIBLEVALUEID);
		public static final UniqueKey<Record> KEY_PROPERTYVALUE_PRIMARY = createUniqueKey(Propertyvalue.PROPERTYVALUE, Propertyvalue.PROPERTYVALUE.PROPERTYVALUEID);
		public static final UniqueKey<Record> KEY_ROLE_PRIMARY = createUniqueKey(Role.ROLE, Role.ROLE.ROLEID);
		public static final UniqueKey<Record> KEY_ROLE_UK_ROLE_IDENTIFIER = createUniqueKey(Role.ROLE, Role.ROLE.IDENTIFIER);
		public static final UniqueKey<Record> KEY_ROLE_PERMISSION_PRIMARY = createUniqueKey(RolePermission.ROLE_PERMISSION, RolePermission.ROLE_PERMISSION.ROLE_PERMISSIONID);
		public static final UniqueKey<Record> KEY_SOURCEDOCUMENT_PRIMARY = createUniqueKey(Sourcedocument.SOURCEDOCUMENT, Sourcedocument.SOURCEDOCUMENT.SOURCEDOCUMENTID);
		public static final UniqueKey<Record> KEY_STATICMARKUPATTRIBUTE_PRIMARY = createUniqueKey(Staticmarkupattribute.STATICMARKUPATTRIBUTE, Staticmarkupattribute.STATICMARKUPATTRIBUTE.STATICMARKUPATTRIBUTEID);
		public static final UniqueKey<Record> KEY_STATICMARKUPCOLLECTION_PRIMARY = createUniqueKey(Staticmarkupcollection.STATICMARKUPCOLLECTION, Staticmarkupcollection.STATICMARKUPCOLLECTION.STATICMARKUPCOLLECTIONID);
		public static final UniqueKey<Record> KEY_STATICMARKUPINSTANCE_PRIMARY = createUniqueKey(Staticmarkupinstance.STATICMARKUPINSTANCE, Staticmarkupinstance.STATICMARKUPINSTANCE.STATICMARKUPINSTANCEID);
		public static final UniqueKey<Record> KEY_TAGDEFINITION_PRIMARY = createUniqueKey(Tagdefinition.TAGDEFINITION, Tagdefinition.TAGDEFINITION.TAGDEFINITIONID);
		public static final UniqueKey<Record> KEY_TAGDEFINITION_UK_TDEF_TSDEF_UUID = createUniqueKey(Tagdefinition.TAGDEFINITION, Tagdefinition.TAGDEFINITION.UUID, Tagdefinition.TAGDEFINITION.TAGSETDEFINITIONID);
		public static final UniqueKey<Record> KEY_TAGINSTANCE_PRIMARY = createUniqueKey(Taginstance.TAGINSTANCE, Taginstance.TAGINSTANCE.TAGINSTANCEID);
		public static final UniqueKey<Record> KEY_TAGINSTANCE_UK_TI_UUID = createUniqueKey(Taginstance.TAGINSTANCE, Taginstance.TAGINSTANCE.UUID);
		public static final UniqueKey<Record> KEY_TAGLIBRARY_PRIMARY = createUniqueKey(Taglibrary.TAGLIBRARY, Taglibrary.TAGLIBRARY.TAGLIBRARYID);
		public static final UniqueKey<Record> KEY_TAGREFERENCE_PRIMARY = createUniqueKey(Tagreference.TAGREFERENCE, Tagreference.TAGREFERENCE.TAGREFERENCEID);
		public static final UniqueKey<Record> KEY_TAGSETDEFINITION_PRIMARY = createUniqueKey(Tagsetdefinition.TAGSETDEFINITION, Tagsetdefinition.TAGSETDEFINITION.TAGSETDEFINITIONID);
		public static final UniqueKey<Record> KEY_TAGSETDEFINITION_UK_TSDEF_TLIB_UUID = createUniqueKey(Tagsetdefinition.TAGSETDEFINITION, Tagsetdefinition.TAGSETDEFINITION.UUID, Tagsetdefinition.TAGSETDEFINITION.TAGLIBRARYID);
		public static final UniqueKey<Record> KEY_UNSEPARABLE_CHARSEQUENCE_PRIMARY = createUniqueKey(UnseparableCharsequence.UNSEPARABLE_CHARSEQUENCE, UnseparableCharsequence.UNSEPARABLE_CHARSEQUENCE.USCID);
		public static final UniqueKey<Record> KEY_USER_PRIMARY = createUniqueKey(User.USER, User.USER.USERID);
		public static final UniqueKey<Record> KEY_USERDEFINED_SEPARATINGCHARACTER_PRIMARY = createUniqueKey(UserdefinedSeparatingcharacter.USERDEFINED_SEPARATINGCHARACTER, UserdefinedSeparatingcharacter.USERDEFINED_SEPARATINGCHARACTER.UDSCID);
		public static final UniqueKey<Record> KEY_USERMARKUPCOLLECTION_PRIMARY = createUniqueKey(Usermarkupcollection.USERMARKUPCOLLECTION, Usermarkupcollection.USERMARKUPCOLLECTION.USERMARKUPCOLLECTIONID);
		public static final UniqueKey<Record> KEY_USER_CORPUS_PRIMARY = createUniqueKey(UserCorpus.USER_CORPUS, UserCorpus.USER_CORPUS.USER_CORPUSID);
		public static final UniqueKey<Record> KEY_USER_ROLE_PRIMARY = createUniqueKey(UserRole.USER_ROLE, UserRole.USER_ROLE.USER_ROLEID);
		public static final UniqueKey<Record> KEY_USER_SOURCEDOCUMENT_PRIMARY = createUniqueKey(UserSourcedocument.USER_SOURCEDOCUMENT, UserSourcedocument.USER_SOURCEDOCUMENT.USER_SOURCEDOCUMENTID);
		public static final UniqueKey<Record> KEY_USER_STATICMARKUPCOLLECTION_PRIMARY = createUniqueKey(UserStaticmarkupcollection.USER_STATICMARKUPCOLLECTION, UserStaticmarkupcollection.USER_STATICMARKUPCOLLECTION.USER_STATICMARKUPCOLLECTIONID);
		public static final UniqueKey<Record> KEY_USER_TAGLIBRARY_PRIMARY = createUniqueKey(UserTaglibrary.USER_TAGLIBRARY, UserTaglibrary.USER_TAGLIBRARY.USER_TAGLIBRARYID);
		public static final UniqueKey<Record> KEY_USER_USERMARKUPCOLLECTION_PRIMARY = createUniqueKey(UserUsermarkupcollection.USER_USERMARKUPCOLLECTION, UserUsermarkupcollection.USER_USERMARKUPCOLLECTION.USER_USERMARKUPCOLLECTIOID);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<Record, Record> FK_CORPUSSD_CORPUSID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_CORPUS_PRIMARY, CorpusSourcedocument.CORPUS_SOURCEDOCUMENT, CorpusSourcedocument.CORPUS_SOURCEDOCUMENT.CORPUSID);
		public static final ForeignKey<Record, Record> FK_CORPUSSD_SOURCEDOCUMENTID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_SOURCEDOCUMENT_PRIMARY, CorpusSourcedocument.CORPUS_SOURCEDOCUMENT, CorpusSourcedocument.CORPUS_SOURCEDOCUMENT.SOURCEDOCUMENTID);
		public static final ForeignKey<Record, Record> FK_CORPUSSMC_CORPUSID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_CORPUS_PRIMARY, CorpusStaticmarkupcollection.CORPUS_STATICMARKUPCOLLECTION, CorpusStaticmarkupcollection.CORPUS_STATICMARKUPCOLLECTION.CORPUSID);
		public static final ForeignKey<Record, Record> FK_CORPUSSMC_STATICMARKUPCOLLECTIONID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_STATICMARKUPCOLLECTION_PRIMARY, CorpusStaticmarkupcollection.CORPUS_STATICMARKUPCOLLECTION, CorpusStaticmarkupcollection.CORPUS_STATICMARKUPCOLLECTION.STATICMARKUPCOLLECTIONID);
		public static final ForeignKey<Record, Record> FK_CORPUSUMC_CORPUSID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_CORPUS_PRIMARY, CorpusUsermarkupcollection.CORPUS_USERMARKUPCOLLECTION, CorpusUsermarkupcollection.CORPUS_USERMARKUPCOLLECTION.CORPUSID);
		public static final ForeignKey<Record, Record> FK_CORPUSUMC_USERMARKUPCOLLECTIONID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_USERMARKUPCOLLECTION_PRIMARY, CorpusUsermarkupcollection.CORPUS_USERMARKUPCOLLECTION, CorpusUsermarkupcollection.CORPUS_USERMARKUPCOLLECTION.USERMARKUPCOLLECTIONID);
		public static final ForeignKey<Record, Record> FK_PROP_PROPERTYDEFINITIONID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_PROPERTYDEFINITION_PRIMARY, Property.PROPERTY, Property.PROPERTY.PROPERTYDEFINITIONID);
		public static final ForeignKey<Record, Record> FK_PROP_TAGINSTANCEID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_TAGINSTANCE_PRIMARY, Property.PROPERTY, Property.PROPERTY.TAGINSTANCEID);
		public static final ForeignKey<Record, Record> FK_PD_TAGDEFINITIONID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_TAGDEFINITION_PRIMARY, Propertydefinition.PROPERTYDEFINITION, Propertydefinition.PROPERTYDEFINITION.TAGDEFINITIONID);
		public static final ForeignKey<Record, Record> FK_PPV_PROPERTYDEFINITIONID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_PROPERTYDEFINITION_PRIMARY, PropertydefPossiblevalue.PROPERTYDEF_POSSIBLEVALUE, PropertydefPossiblevalue.PROPERTYDEF_POSSIBLEVALUE.PROPERTYDEFINITIONID);
		public static final ForeignKey<Record, Record> FK_PROPV_PROPERTYID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_PROPERTY_PRIMARY, Propertyvalue.PROPERTYVALUE, Propertyvalue.PROPERTYVALUE.PROPERTYID);
		public static final ForeignKey<Record, Record> FK_ROLE_PERM_ROLEID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_ROLE_PRIMARY, RolePermission.ROLE_PERMISSION, RolePermission.ROLE_PERMISSION.ROLEID);
		public static final ForeignKey<Record, Record> FK_ROLE_PERM_PERMISSIONID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_PERMISSION_PRIMARY, RolePermission.ROLE_PERMISSION, RolePermission.ROLE_PERMISSION.PERMISSIONID);
		public static final ForeignKey<Record, Record> FK_STATICA_STATICMARKUPINSTANCEID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_STATICMARKUPINSTANCE_PRIMARY, Staticmarkupattribute.STATICMARKUPATTRIBUTE, Staticmarkupattribute.STATICMARKUPATTRIBUTE.STATICMARKUPINSTANCEID);
		public static final ForeignKey<Record, Record> FK_STATICMC_SOURCEDOCUMENTID00 = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_SOURCEDOCUMENT_PRIMARY, Staticmarkupcollection.STATICMARKUPCOLLECTION, Staticmarkupcollection.STATICMARKUPCOLLECTION.SOURCEDOCUMENTID);
		public static final ForeignKey<Record, Record> FK_STATICMI_STATICMARKUPCOLLECTIONID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_STATICMARKUPCOLLECTION_PRIMARY, Staticmarkupinstance.STATICMARKUPINSTANCE, Staticmarkupinstance.STATICMARKUPINSTANCE.STATICMARKUPCOLLECTIONID);
		public static final ForeignKey<Record, Record> FK_TDEF_TAGSETDEFINITIONID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_TAGSETDEFINITION_PRIMARY, Tagdefinition.TAGDEFINITION, Tagdefinition.TAGDEFINITION.TAGSETDEFINITIONID);
		public static final ForeignKey<Record, Record> FK_TDEF_PARENTID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_TAGDEFINITION_PRIMARY, Tagdefinition.TAGDEFINITION, Tagdefinition.TAGDEFINITION.PARENTID);
		public static final ForeignKey<Record, Record> FK_TI_TAGDEFINITIONID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_TAGDEFINITION_PRIMARY, Taginstance.TAGINSTANCE, Taginstance.TAGINSTANCE.TAGDEFINITIONID);
		public static final ForeignKey<Record, Record> FK_TR_USERMARKUPCOLLECTIONID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_USERMARKUPCOLLECTION_PRIMARY, Tagreference.TAGREFERENCE, Tagreference.TAGREFERENCE.USERMARKUPCOLLECTIONID);
		public static final ForeignKey<Record, Record> FK_TR_TAGINSTANCEID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_TAGINSTANCE_PRIMARY, Tagreference.TAGREFERENCE, Tagreference.TAGREFERENCE.TAGINSTANCEID);
		public static final ForeignKey<Record, Record> FK_TSDEF_TAGLIBRARYID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_TAGLIBRARY_PRIMARY, Tagsetdefinition.TAGSETDEFINITION, Tagsetdefinition.TAGSETDEFINITION.TAGLIBRARYID);
		public static final ForeignKey<Record, Record> FK_USCS_SOURCEDOCUMENTID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_SOURCEDOCUMENT_PRIMARY, UnseparableCharsequence.UNSEPARABLE_CHARSEQUENCE, UnseparableCharsequence.UNSEPARABLE_CHARSEQUENCE.SOURCEDOCUMENTID);
		public static final ForeignKey<Record, Record> FK_UDSC_SOURCEDOCUMENTID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_SOURCEDOCUMENT_PRIMARY, UserdefinedSeparatingcharacter.USERDEFINED_SEPARATINGCHARACTER, UserdefinedSeparatingcharacter.USERDEFINED_SEPARATINGCHARACTER.SOURCEDOCUMENTID);
		public static final ForeignKey<Record, Record> FK_UMC_SOURCEDOCUMENTID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_SOURCEDOCUMENT_PRIMARY, Usermarkupcollection.USERMARKUPCOLLECTION, Usermarkupcollection.USERMARKUPCOLLECTION.SOURCEDOCUMENTID);
		public static final ForeignKey<Record, Record> FK_UMC_TAGLIBRARYID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_TAGLIBRARY_PRIMARY, Usermarkupcollection.USERMARKUPCOLLECTION, Usermarkupcollection.USERMARKUPCOLLECTION.TAGLIBRARYID);
		public static final ForeignKey<Record, Record> FK_USERCORPUS_USERID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_USER_PRIMARY, UserCorpus.USER_CORPUS, UserCorpus.USER_CORPUS.USERID);
		public static final ForeignKey<Record, Record> FK_USERCORPUS_CORPUSID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_CORPUS_PRIMARY, UserCorpus.USER_CORPUS, UserCorpus.USER_CORPUS.CORPUSID);
		public static final ForeignKey<Record, Record> FK_USER_ROLE_USERID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_USER_PRIMARY, UserRole.USER_ROLE, UserRole.USER_ROLE.USERID);
		public static final ForeignKey<Record, Record> FK_USER_ROLE_ROLEID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_ROLE_PRIMARY, UserRole.USER_ROLE, UserRole.USER_ROLE.ROLEID);
		public static final ForeignKey<Record, Record> FK_USERSD_USERID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_USER_PRIMARY, UserSourcedocument.USER_SOURCEDOCUMENT, UserSourcedocument.USER_SOURCEDOCUMENT.USERID);
		public static final ForeignKey<Record, Record> FK_USERSD_SOURCEDOCUMENTID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_SOURCEDOCUMENT_PRIMARY, UserSourcedocument.USER_SOURCEDOCUMENT, UserSourcedocument.USER_SOURCEDOCUMENT.SOURCEDOCUMENTID);
		public static final ForeignKey<Record, Record> FK_USERSMC_USERID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_USER_PRIMARY, UserStaticmarkupcollection.USER_STATICMARKUPCOLLECTION, UserStaticmarkupcollection.USER_STATICMARKUPCOLLECTION.USERID);
		public static final ForeignKey<Record, Record> FK_USERSMC_STATICMARKUPCOLLECTIONID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_STATICMARKUPCOLLECTION_PRIMARY, UserStaticmarkupcollection.USER_STATICMARKUPCOLLECTION, UserStaticmarkupcollection.USER_STATICMARKUPCOLLECTION.STATICMARKUPCOLLECTIONID);
		public static final ForeignKey<Record, Record> FK_USERTL_USERID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_USER_PRIMARY, UserTaglibrary.USER_TAGLIBRARY, UserTaglibrary.USER_TAGLIBRARY.USERID);
		public static final ForeignKey<Record, Record> FK_USERTL_TAGLIBRARYID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_TAGLIBRARY_PRIMARY, UserTaglibrary.USER_TAGLIBRARY, UserTaglibrary.USER_TAGLIBRARY.TAGLIBRARYID);
		public static final ForeignKey<Record, Record> FK_USERUMC_USERID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_USER_PRIMARY, UserUsermarkupcollection.USER_USERMARKUPCOLLECTION, UserUsermarkupcollection.USER_USERMARKUPCOLLECTION.USERID);
		public static final ForeignKey<Record, Record> FK_USERUMC_USERMARKUPCOLLECTIONID = createForeignKey(de.catma.repository.db.jooqgen.catmarepository.Keys.KEY_USERMARKUPCOLLECTION_PRIMARY, UserUsermarkupcollection.USER_USERMARKUPCOLLECTION, UserUsermarkupcollection.USER_USERMARKUPCOLLECTION.USERMARKUPCOLLECTIONID);
	}
}
